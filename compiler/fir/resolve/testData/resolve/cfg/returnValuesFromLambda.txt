FILE: returnValuesFromLambda.kt
    public abstract interface A : R|kotlin/Any| {
    }
    public final class B : R|A| {
        public constructor(): R|B| {
            super<R|kotlin/Any|>()
        }

    }
    public final class C : R|A| {
        public constructor(): R|C| {
            super<R|kotlin/Any|>()
        }

    }
    public final fun test_1(b: R|kotlin/Boolean|): R|kotlin/Unit| {
        lval x: R|A| = R|kotlin/run|<R|A|>(<L> = run@fun <anonymous>(): R|C| <kind=EXACTLY_ONCE>  {
            when () {
                R|<local>/b| ->  {
                    ^@run R|/B.B|()
                }
            }

            R|/C.C|()
        }
        )
    }
    public final fun test_2(): R|kotlin/Unit| {
        lval x: R|C| = R|kotlin/run|<R|C|>(<L> = run@fun <anonymous>(): R|C| <kind=EXACTLY_ONCE>  {
            ^@run R|/C.C|()
        }
        )
    }
    public final fun test_3(): R|kotlin/Unit| {
        lval x: R|kotlin/Unit| = R|kotlin/run|<R|kotlin/Unit|>(<L> = run@fun <anonymous>(): R|kotlin/Unit| <kind=EXACTLY_ONCE>  {
            ^ Unit
        }
        )
    }
