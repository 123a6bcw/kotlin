FILE fqName:<root> fileName:/dataClassMembers.kt
  CLASS #0 CLASS name:Test modality:FINAL visibility:public [data] superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER #1 INSTANCE_RECEIVER name:<this> type:<root>.Test<T of <root>.Test> 
    TYPE_PARAMETER #2 name:T index:0 variance: superTypes:[kotlin.Any?]
    CONSTRUCTOR #3 visibility:public <> (x:T of <root>.Test, y:kotlin.String) returnType:<root>.Test<T of <root>.Test> [primary] 
      VALUE_PARAMETER #4 name:x index:0 type:T of <root>.Test 
      VALUE_PARAMETER #5 name:y index:1 type:kotlin.String 
        EXPRESSION_BODY
          CONST String type=kotlin.String value=""
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL '#6 public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL class='#0 class CLASS Test declared in <root>'
    PROPERTY #7 name:x visibility:public modality:FINAL [val] 
      FIELD #8 PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:public [final] 
        EXPRESSION_BODY
          GET_VAR '#4 x: T of <root>.Test declared in <root>.Test.<init>' type=T of <root>.Test origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN #9 DEFAULT_PROPERTY_ACCESSOR name:<get-x> visibility:public modality:FINAL <> ($this:<root>.Test<T of <root>.Test>) returnType:T of <root>.Test 
        correspondingProperty: PROPERTY #7 name:x visibility:public modality:FINAL [val] 
        $this: VALUE_PARAMETER #10 name:<this> type:<root>.Test<T of <root>.Test> 
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='#9 public final fun <get-x> (): T of <root>.Test declared in <root>.Test'
            GET_FIELD '#8 FIELD #8 PROPERTY_BACKING_FIELD name:x type:T of <root>.Test visibility:public [final] ' type=T of <root>.Test origin=null
              receiver: GET_VAR '#10 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.<get-x>' type=<root>.Test<T of <root>.Test> origin=null
    PROPERTY #11 name:y visibility:public modality:FINAL [val] 
      FIELD #12 PROPERTY_BACKING_FIELD name:y type:kotlin.String visibility:public [final] 
        EXPRESSION_BODY
          GET_VAR '#5 y: kotlin.String declared in <root>.Test.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN #13 DEFAULT_PROPERTY_ACCESSOR name:<get-y> visibility:public modality:FINAL <> ($this:<root>.Test<T of <root>.Test>) returnType:kotlin.String 
        correspondingProperty: PROPERTY #11 name:y visibility:public modality:FINAL [val] 
        $this: VALUE_PARAMETER #14 name:<this> type:<root>.Test<T of <root>.Test> 
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='#13 public final fun <get-y> (): kotlin.String declared in <root>.Test'
            GET_FIELD '#12 FIELD #12 PROPERTY_BACKING_FIELD name:y type:kotlin.String visibility:public [final] ' type=kotlin.String origin=null
              receiver: GET_VAR '#14 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.<get-y>' type=<root>.Test<T of <root>.Test> origin=null
    FUN #15 GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL <> ($this:<root>.Test<T of <root>.Test>) returnType:T of <root>.Test 
      $this: VALUE_PARAMETER #16 name:<this> type:<root>.Test<T of <root>.Test> 
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='#15 public final fun component1 (): T of <root>.Test declared in <root>.Test'
          CALL '#9 public final fun <get-x> (): T of <root>.Test declared in <root>.Test' type=T of <root>.Test origin=GET_PROPERTY
            $this: GET_VAR '#16 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.component1' type=<root>.Test<T of <root>.Test> origin=null
    FUN #17 GENERATED_DATA_CLASS_MEMBER name:component2 visibility:public modality:FINAL <> ($this:<root>.Test<T of <root>.Test>) returnType:kotlin.String 
      $this: VALUE_PARAMETER #18 name:<this> type:<root>.Test<T of <root>.Test> 
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='#17 public final fun component2 (): kotlin.String declared in <root>.Test'
          CALL '#13 public final fun <get-y> (): kotlin.String declared in <root>.Test' type=kotlin.String origin=GET_PROPERTY
            $this: GET_VAR '#18 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.component2' type=<root>.Test<T of <root>.Test> origin=null
    FUN #19 GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL <> ($this:<root>.Test<T of <root>.Test>, x:T of <root>.Test, y:kotlin.String) returnType:<root>.Test<T of <root>.Test> 
      $this: VALUE_PARAMETER #20 name:<this> type:<root>.Test<T of <root>.Test> 
      VALUE_PARAMETER #21 name:x index:0 type:T of <root>.Test 
        EXPRESSION_BODY
          CALL '#9 public final fun <get-x> (): T of <root>.Test declared in <root>.Test' type=T of <root>.Test origin=GET_PROPERTY
            $this: GET_VAR '#20 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.copy' type=<root>.Test<T of <root>.Test> origin=null
      VALUE_PARAMETER #22 name:y index:1 type:kotlin.String 
        EXPRESSION_BODY
          CALL '#13 public final fun <get-y> (): kotlin.String declared in <root>.Test' type=kotlin.String origin=GET_PROPERTY
            $this: GET_VAR '#20 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.copy' type=<root>.Test<T of <root>.Test> origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='#19 public final fun copy (x: T of <root>.Test, y: kotlin.String): <root>.Test<T of <root>.Test> declared in <root>.Test'
          CALL '#3 public constructor <init> (x: T of <root>.Test, y: kotlin.String) [primary] declared in <root>.Test' type=<root>.Test<T of <root>.Test> origin=null
            <T>: T of <root>.Test
            x: GET_VAR '#21 x: T of <root>.Test declared in <root>.Test.copy' type=T of <root>.Test origin=null
            y: GET_VAR '#22 y: kotlin.String declared in <root>.Test.copy' type=kotlin.String origin=null
    FUN #23 GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN <> ($this:<root>.Test<T of <root>.Test>) returnType:kotlin.String 
      overridden:
        #24 public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER #25 name:<this> type:<root>.Test<T of <root>.Test> 
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='#23 public open fun toString (): kotlin.String declared in <root>.Test'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="Test("
            CONST String type=kotlin.String value="x="
            CALL '#9 public final fun <get-x> (): T of <root>.Test declared in <root>.Test' type=T of <root>.Test origin=GET_PROPERTY
              $this: GET_VAR '#25 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.toString' type=<root>.Test<T of <root>.Test> origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="y="
            CALL '#13 public final fun <get-y> (): kotlin.String declared in <root>.Test' type=kotlin.String origin=GET_PROPERTY
              $this: GET_VAR '#25 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.toString' type=<root>.Test<T of <root>.Test> origin=null
            CONST String type=kotlin.String value=")"
    FUN #26 GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN <> ($this:<root>.Test<T of <root>.Test>) returnType:kotlin.Int 
      overridden:
        #27 public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER #28 name:<this> type:<root>.Test<T of <root>.Test> 
      BLOCK_BODY
        VAR #29 IR_TEMPORARY_VARIABLE name:tmp0_result type:kotlin.Int [var] 
          CONST Int type=kotlin.Int value=0
        SET_VAR '#29 var tmp0_result: kotlin.Int [var] declared in <root>.Test.hashCode' type=kotlin.Unit origin=EQ
          BLOCK type=kotlin.Int origin=null
            VAR #30 IR_TEMPORARY_VARIABLE name:tmp1 type:T of <root>.Test [val] 
              CALL '#9 public final fun <get-x> (): T of <root>.Test declared in <root>.Test' type=T of <root>.Test origin=GET_PROPERTY
                $this: GET_VAR '#28 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.hashCode' type=<root>.Test<T of <root>.Test> origin=null
            WHEN type=kotlin.Int origin=null
              BRANCH
                if: CALL '#31 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR '#30 val tmp1: T of <root>.Test [val] declared in <root>.Test.hashCode' type=T of <root>.Test origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
                then: CONST Int type=kotlin.Int value=0
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CALL '#27 public open fun hashCode (): kotlin.Int declared in kotlin.Any' type=kotlin.Int origin=null
                  $this: GET_VAR '#30 val tmp1: T of <root>.Test [val] declared in <root>.Test.hashCode' type=T of <root>.Test origin=null
        SET_VAR '#29 var tmp0_result: kotlin.Int [var] declared in <root>.Test.hashCode' type=kotlin.Unit origin=EQ
          CALL '#32 public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=null
            $this: CALL '#33 public final fun times (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '#29 var tmp0_result: kotlin.Int [var] declared in <root>.Test.hashCode' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=31
            other: CALL '#34 public open fun hashCode (): kotlin.Int declared in kotlin.String' type=kotlin.Int origin=null
              $this: CALL '#13 public final fun <get-y> (): kotlin.String declared in <root>.Test' type=kotlin.String origin=GET_PROPERTY
                $this: GET_VAR '#28 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.hashCode' type=<root>.Test<T of <root>.Test> origin=null
        RETURN type=kotlin.Nothing from='#26 public open fun hashCode (): kotlin.Int declared in <root>.Test'
          GET_VAR '#29 var tmp0_result: kotlin.Int [var] declared in <root>.Test.hashCode' type=kotlin.Int origin=null
    FUN #35 GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN <> ($this:<root>.Test<T of <root>.Test>, other:kotlin.Any?) returnType:kotlin.Boolean 
      overridden:
        #36 public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER #37 name:<this> type:<root>.Test<T of <root>.Test> 
      VALUE_PARAMETER #38 name:other index:0 type:kotlin.Any? 
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL '#39 public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              arg0: GET_VAR '#37 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.equals' type=<root>.Test<T of <root>.Test> origin=null
              arg1: GET_VAR '#38 other: kotlin.Any? declared in <root>.Test.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='#35 public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Test'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.Test<T of <root>.Test>
              GET_VAR '#38 other: kotlin.Any? declared in <root>.Test.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='#35 public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Test'
              CONST Boolean type=kotlin.Boolean value=false
        VAR #40 IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:<root>.Test<T of <root>.Test> [val] 
          TYPE_OP type=<root>.Test<T of <root>.Test> origin=CAST typeOperand=<root>.Test<T of <root>.Test>
            GET_VAR '#38 other: kotlin.Any? declared in <root>.Test.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL '#41 public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              $this: CALL '#31 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL '#9 public final fun <get-x> (): T of <root>.Test declared in <root>.Test' type=T of <root>.Test origin=GET_PROPERTY
                  $this: GET_VAR '#37 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.equals' type=<root>.Test<T of <root>.Test> origin=null
                arg1: CALL '#9 public final fun <get-x> (): T of <root>.Test declared in <root>.Test' type=T of <root>.Test origin=GET_PROPERTY
                  $this: GET_VAR '#40 val tmp0_other_with_cast: <root>.Test<T of <root>.Test> [val] declared in <root>.Test.equals' type=<root>.Test<T of <root>.Test> origin=null
            then: RETURN type=kotlin.Nothing from='#35 public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Test'
              CONST Boolean type=kotlin.Boolean value=false
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL '#41 public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              $this: CALL '#31 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL '#13 public final fun <get-y> (): kotlin.String declared in <root>.Test' type=kotlin.String origin=GET_PROPERTY
                  $this: GET_VAR '#37 <this>: <root>.Test<T of <root>.Test> declared in <root>.Test.equals' type=<root>.Test<T of <root>.Test> origin=null
                arg1: CALL '#13 public final fun <get-y> (): kotlin.String declared in <root>.Test' type=kotlin.String origin=GET_PROPERTY
                  $this: GET_VAR '#40 val tmp0_other_with_cast: <root>.Test<T of <root>.Test> [val] declared in <root>.Test.equals' type=<root>.Test<T of <root>.Test> origin=null
            then: RETURN type=kotlin.Nothing from='#35 public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Test'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='#35 public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Test'
          CONST Boolean type=kotlin.Boolean value=true
