FILE fqName:<root> fileName:/eqeqRhsConditionPossiblyAffectingLhs.kt
  FUN #0 name:test visibility:public modality:FINAL <> (x:kotlin.Any) returnType:kotlin.Boolean 
    VALUE_PARAMETER #1 name:x index:0 type:kotlin.Any 
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='#0 public final fun test (x: kotlin.Any): kotlin.Boolean declared in <root>'
        CALL '#2 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
          arg0: GET_VAR '#1 x: kotlin.Any declared in <root>.test' type=kotlin.Any origin=null
          arg1: WHEN type=IrErrorType origin=IF
            BRANCH
              if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=kotlin.Double
                GET_VAR '#1 x: kotlin.Any declared in <root>.test' type=kotlin.Any origin=null
              then: BLOCK type=IrErrorType origin=EXCLEXCL
                VAR #3 name:<bangbang> type:kotlin.Nothing? [val] 
                  CONST Null type=kotlin.Nothing? value=null
                WHEN type=IrErrorType origin=EXCLEXCL
                  BRANCH
                    if: CALL '#2 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      arg0: GET_VAR '#3 val <bangbang>: kotlin.Nothing? [val] declared in <root>.test' type=kotlin.Nothing? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                    then: THROW type=kotlin.Nothing
                      ERROR_CALL 'Unresolved reference: <Unresolved name: KotlinNullPointerException>#' type=IrErrorType
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: GET_VAR '#3 val <bangbang>: kotlin.Nothing? [val] declared in <root>.test' type=kotlin.Nothing? origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR '#1 x: kotlin.Any declared in <root>.test' type=kotlin.Any origin=null
