FILE fqName:<root> fileName:/dotQualified.kt
  FUN #0 name:length visibility:public modality:FINAL <> (s:kotlin.String) returnType:kotlin.Int 
    VALUE_PARAMETER #1 name:s index:0 type:kotlin.String 
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='#0 public final fun length (s: kotlin.String): kotlin.Int declared in <root>'
        CALL '#2 public open fun <get-length> (): kotlin.Int declared in kotlin.String' type=kotlin.Int origin=GET_PROPERTY
          $this: GET_VAR '#1 s: kotlin.String declared in <root>.length' type=kotlin.String origin=null
  FUN #3 name:lengthN visibility:public modality:FINAL <> (s:kotlin.String?) returnType:kotlin.Int? 
    VALUE_PARAMETER #4 name:s index:0 type:kotlin.String? 
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='#3 public final fun lengthN (s: kotlin.String?): kotlin.Int? declared in <root>'
        BLOCK type=kotlin.Int? origin=SAFE_CALL
          VAR #5 IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:kotlin.String? [val] 
            GET_VAR '#4 s: kotlin.String? declared in <root>.lengthN' type=kotlin.String? origin=null
          WHEN type=kotlin.Int? origin=null
            BRANCH
              if: CALL '#6 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR '#5 val tmp0_safe_receiver: kotlin.String? [val] declared in <root>.lengthN' type=kotlin.String? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CONST Null type=kotlin.Nothing? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL '#2 public open fun <get-length> (): kotlin.Int declared in kotlin.String' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR '#5 val tmp0_safe_receiver: kotlin.String? [val] declared in <root>.lengthN' type=kotlin.String? origin=null
