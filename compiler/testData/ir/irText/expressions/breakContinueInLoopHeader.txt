FILE fqName:<root> fileName:/breakContinueInLoopHeader.kt
  FUN #0 name:test1 visibility:public modality:FINAL <> (c:kotlin.Boolean?) returnType:kotlin.Unit 
    VALUE_PARAMETER #1 name:c index:0 type:kotlin.Boolean? 
    BLOCK_BODY
      WHILE label=L origin=WHILE_LOOP
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=kotlin.Unit origin=null
          WHILE label=L2 origin=WHILE_LOOP
            condition: BLOCK type=kotlin.Boolean origin=ELVIS
              VAR #2 IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Boolean? [val] 
                GET_VAR '#1 c: kotlin.Boolean? declared in <root>.test1' type=kotlin.Boolean? origin=null
              WHEN type=kotlin.Boolean origin=null
                BRANCH
                  if: CALL '#3 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR '#2 val tmp0_elvis_lhs: kotlin.Boolean? [val] declared in <root>.test1' type=kotlin.Boolean? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: BREAK label=null loop.label=L
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: GET_VAR '#2 val tmp0_elvis_lhs: kotlin.Boolean? [val] declared in <root>.test1' type=kotlin.Boolean? origin=null
  FUN #4 name:test2 visibility:public modality:FINAL <> (c:kotlin.Boolean?) returnType:kotlin.Unit 
    VALUE_PARAMETER #5 name:c index:0 type:kotlin.Boolean? 
    BLOCK_BODY
      WHILE label=L origin=WHILE_LOOP
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=kotlin.Unit origin=null
          WHILE label=L2 origin=WHILE_LOOP
            condition: BLOCK type=kotlin.Boolean origin=ELVIS
              VAR #6 IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Boolean? [val] 
                GET_VAR '#5 c: kotlin.Boolean? declared in <root>.test2' type=kotlin.Boolean? origin=null
              WHEN type=kotlin.Boolean origin=null
                BRANCH
                  if: CALL '#3 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR '#6 val tmp0_elvis_lhs: kotlin.Boolean? [val] declared in <root>.test2' type=kotlin.Boolean? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: CONTINUE label=null loop.label=L
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: GET_VAR '#6 val tmp0_elvis_lhs: kotlin.Boolean? [val] declared in <root>.test2' type=kotlin.Boolean? origin=null
  FUN #7 name:test3 visibility:public modality:FINAL <> (ss:kotlin.collections.List<kotlin.String>?) returnType:kotlin.Unit 
    VALUE_PARAMETER #8 name:ss index:0 type:kotlin.collections.List<kotlin.String>? 
    BLOCK_BODY
      WHILE label=L origin=WHILE_LOOP
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=kotlin.Unit origin=null
          BLOCK type=kotlin.Unit origin=FOR_LOOP
            VAR #9 FOR_LOOP_ITERATOR name:tmp1_iterator type:kotlin.collections.Iterator<kotlin.String> [val] 
              CALL '#10 public abstract fun iterator (): kotlin.collections.Iterator<E of kotlin.collections.List> declared in kotlin.collections.List' type=kotlin.collections.Iterator<kotlin.String> origin=FOR_LOOP_ITERATOR
                $this: BLOCK type=kotlin.collections.List<kotlin.String> origin=ELVIS
                  VAR #11 IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.collections.List<kotlin.String>? [val] 
                    GET_VAR '#8 ss: kotlin.collections.List<kotlin.String>? declared in <root>.test3' type=kotlin.collections.List<kotlin.String>? origin=null
                  WHEN type=kotlin.collections.List<kotlin.String> origin=null
                    BRANCH
                      if: CALL '#3 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                        arg0: GET_VAR '#11 val tmp0_elvis_lhs: kotlin.collections.List<kotlin.String>? [val] declared in <root>.test3' type=kotlin.collections.List<kotlin.String>? origin=null
                        arg1: CONST Null type=kotlin.Nothing? value=null
                      then: CONTINUE label=null loop.label=L
                    BRANCH
                      if: CONST Boolean type=kotlin.Boolean value=true
                      then: GET_VAR '#11 val tmp0_elvis_lhs: kotlin.collections.List<kotlin.String>? [val] declared in <root>.test3' type=kotlin.collections.List<kotlin.String>? origin=null
            WHILE label=L2 origin=FOR_LOOP_INNER_WHILE
              condition: CALL '#12 public abstract fun hasNext (): kotlin.Boolean declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
                $this: GET_VAR '#9 val tmp1_iterator: kotlin.collections.Iterator<kotlin.String> [val] declared in <root>.test3' type=kotlin.collections.Iterator<kotlin.String> origin=null
              body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
                VAR #13 FOR_LOOP_VARIABLE name:s type:kotlin.String [val] 
                  CALL '#14 public abstract fun next (): T of kotlin.collections.Iterator declared in kotlin.collections.Iterator' type=kotlin.String origin=FOR_LOOP_NEXT
                    $this: GET_VAR '#9 val tmp1_iterator: kotlin.collections.Iterator<kotlin.String> [val] declared in <root>.test3' type=kotlin.collections.Iterator<kotlin.String> origin=null
  FUN #15 name:test4 visibility:public modality:FINAL <> (ss:kotlin.collections.List<kotlin.String>?) returnType:kotlin.Unit 
    VALUE_PARAMETER #16 name:ss index:0 type:kotlin.collections.List<kotlin.String>? 
    BLOCK_BODY
      WHILE label=L origin=WHILE_LOOP
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=kotlin.Unit origin=null
          BLOCK type=kotlin.Unit origin=FOR_LOOP
            VAR #17 FOR_LOOP_ITERATOR name:tmp1_iterator type:kotlin.collections.Iterator<kotlin.String> [val] 
              CALL '#10 public abstract fun iterator (): kotlin.collections.Iterator<E of kotlin.collections.List> declared in kotlin.collections.List' type=kotlin.collections.Iterator<kotlin.String> origin=FOR_LOOP_ITERATOR
                $this: BLOCK type=kotlin.collections.List<kotlin.String> origin=ELVIS
                  VAR #18 IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.collections.List<kotlin.String>? [val] 
                    GET_VAR '#16 ss: kotlin.collections.List<kotlin.String>? declared in <root>.test4' type=kotlin.collections.List<kotlin.String>? origin=null
                  WHEN type=kotlin.collections.List<kotlin.String> origin=null
                    BRANCH
                      if: CALL '#3 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                        arg0: GET_VAR '#18 val tmp0_elvis_lhs: kotlin.collections.List<kotlin.String>? [val] declared in <root>.test4' type=kotlin.collections.List<kotlin.String>? origin=null
                        arg1: CONST Null type=kotlin.Nothing? value=null
                      then: BREAK label=null loop.label=L
                    BRANCH
                      if: CONST Boolean type=kotlin.Boolean value=true
                      then: GET_VAR '#18 val tmp0_elvis_lhs: kotlin.collections.List<kotlin.String>? [val] declared in <root>.test4' type=kotlin.collections.List<kotlin.String>? origin=null
            WHILE label=L2 origin=FOR_LOOP_INNER_WHILE
              condition: CALL '#12 public abstract fun hasNext (): kotlin.Boolean declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
                $this: GET_VAR '#17 val tmp1_iterator: kotlin.collections.Iterator<kotlin.String> [val] declared in <root>.test4' type=kotlin.collections.Iterator<kotlin.String> origin=null
              body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
                VAR #19 FOR_LOOP_VARIABLE name:s type:kotlin.String [val] 
                  CALL '#14 public abstract fun next (): T of kotlin.collections.Iterator declared in kotlin.collections.Iterator' type=kotlin.String origin=FOR_LOOP_NEXT
                    $this: GET_VAR '#17 val tmp1_iterator: kotlin.collections.Iterator<kotlin.String> [val] declared in <root>.test4' type=kotlin.collections.Iterator<kotlin.String> origin=null
  FUN #20 name:test5 visibility:public modality:FINAL <> () returnType:kotlin.Unit 
    BLOCK_BODY
      VAR #21 name:i type:kotlin.Int [var] 
        CONST Int type=kotlin.Int value=0
      WHILE label=Outer origin=WHILE_LOOP
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=kotlin.Unit origin=null
          TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
            BLOCK type=kotlin.Int origin=PREFIX_INCR
              SET_VAR '#21 var i: kotlin.Int [var] declared in <root>.test5' type=kotlin.Unit origin=PREFIX_INCR
                CALL '#22 public final fun inc (): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PREFIX_INCR
                  $this: GET_VAR '#21 var i: kotlin.Int [var] declared in <root>.test5' type=kotlin.Int origin=PREFIX_INCR
              GET_VAR '#21 var i: kotlin.Int [var] declared in <root>.test5' type=kotlin.Int origin=PREFIX_INCR
          VAR #23 name:j type:kotlin.Int [var] 
            CONST Int type=kotlin.Int value=0
          BLOCK type=kotlin.Unit origin=null
            DO_WHILE label=Inner origin=DO_WHILE_LOOP
              body: COMPOSITE type=kotlin.Unit origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  BLOCK type=kotlin.Int origin=PREFIX_INCR
                    SET_VAR '#23 var j: kotlin.Int [var] declared in <root>.test5' type=kotlin.Unit origin=PREFIX_INCR
                      CALL '#22 public final fun inc (): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PREFIX_INCR
                        $this: GET_VAR '#23 var j: kotlin.Int [var] declared in <root>.test5' type=kotlin.Int origin=PREFIX_INCR
                    GET_VAR '#23 var j: kotlin.Int [var] declared in <root>.test5' type=kotlin.Int origin=PREFIX_INCR
              condition: WHEN type=kotlin.Boolean origin=IF
                BRANCH
                  if: CALL '#24 public final fun greaterOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
                    arg0: GET_VAR '#23 var j: kotlin.Int [var] declared in <root>.test5' type=kotlin.Int origin=null
                    arg1: CONST Int type=kotlin.Int value=3
                  then: CONST Boolean type=kotlin.Boolean value=false
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: BREAK label=null loop.label=Inner
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL '#3 public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR '#21 var i: kotlin.Int [var] declared in <root>.test5' type=kotlin.Int origin=null
                arg1: CONST Int type=kotlin.Int value=3
              then: BREAK label=null loop.label=Outer
