package

public val testValByImmutable: [ERROR : Type from delegate]
public val testValByMutable: [ERROR : Type from delegate]
public var testVarByImmutable: [ERROR : Type from delegate]
public var testVarByMutable: [ERROR : Type from delegate]

public final class Immutable</*0*/ T> {
    public constructor Immutable</*0*/ T>(/*0*/ value: T)
    private final val value: T
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun getValue(): T
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Mutable</*0*/ T> {
    public constructor Mutable</*0*/ T>(/*0*/ value: T)
    private final var value: T
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun getValue(): T
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final fun setValue(/*0*/ newValue: T): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
