pluginManagement {
    repositories {
        def pluginRepo = System.getProperty("bootstrap.kotlin.repo")
        if (pluginRepo != null) {
            maven {
                url pluginRepo
            }
        }

        if (cacheRedirectorEnabled == 'true') {
            logger.info("Using cache redirector for settings.gradle pluginManagement")
            maven {
                url "https://cache-redirector.jetbrains.com/plugins.gradle.org/m2"
            }
        } else {
            gradlePluginPortal()
        }
    }
}

rootProject.name = "kotlin"

def includeProject(String projectPath, String customRelativePath = null) {
    include projectPath
    if (customRelativePath != null) {
        project(projectPath).projectDir = new File(customRelativePath)
    }
}

def flags = BuildPropertiesKt.getKotlinBuildPropertiesForSettings(settings)

if (flags.includeCidrPlugins) {
    logger.info("Including CIDR plugins in settings.gradle")
    includeProject(':kotlin-ultimate:ide:cidr-native')
    includeProject(':kotlin-ultimate:ide:clion-native')
    includeProject(':kotlin-ultimate:ide:appcode-native')
    includeProject(':kotlin-ultimate:prepare:cidr-plugin')
    includeProject(':kotlin-ultimate:prepare:clion-plugin')
    includeProject(':kotlin-ultimate:prepare:appcode-plugin')
} else {
    logger.info("NOT including CIDR plugins in settings.gradle")
}

def isTeamcityBuild = hasProperty("teamcity") || System.getenv("TEAMCITY_VERSION") != null
if (flags.kotlinUltimateExists && (isTeamcityBuild || flags.intellijUltimateEnabled)) {
    includeProject(':kotlin-ultimate:ultimate')
    includeProject(':kotlin-ultimate:ultimate:ultimate-runner')
    logger.info("Including extension for IJ Ultimate in settings.gradle")
} else {
    logger.info("NOT including extension for IJ Ultimate in settings.gradle")
}

if (flags.inJpsBuildIdeaSync) {
    includeProject(':kotlin-stdlib:jps-build', 'libraries/stdlib/jps-build')
} else {
    // modules that we are currently cannot compile with jps
    includeProject(':kotlin-idl2k', 'libraries/tools/idl2k')

    includeProject(':kotlin-stdlib-common', 'libraries/stdlib/common')
    includeProject(':kotlin-stdlib', 'libraries/stdlib/jvm')
    includeProject(':kotlin-stdlib-js', 'libraries/stdlib/js-v1')
    includeProject(':kotlin-stdlib-js-ir', 'libraries/stdlib/js-ir')
    includeProject(':kotlin-test:kotlin-test-js-ir', 'libraries/kotlin.test/js-ir')
    includeProject(':kotlin-stdlib-jdk7', 'libraries/stdlib/jdk7')
    includeProject(':kotlin-stdlib-jdk8', 'libraries/stdlib/jdk8')
    includeProject(':kotlin-stdlib:samples', 'libraries/stdlib/samples')
    includeProject(':kotlin-stdlib:jvm-minimal-for-test', 'libraries/stdlib/jvm-minimal-for-test')

    includeProject(':tools:binary-compatibility-validator', 'libraries/tools/binary-compatibility-validator')
    includeProject(':tools:kotlin-stdlib-gen', 'libraries/tools/kotlin-stdlib-gen')
}

includeProject(':allopen-ide-plugin', 'plugins/allopen/allopen-ide')
includeProject(':compiler')
includeProject(':compiler:android-tests')
includeProject(':compiler:backend')
includeProject(':compiler:backend-common')
includeProject(':compiler:backend.js', 'compiler/ir/backend.js')
includeProject(':compiler:backend.jvm', 'compiler/ir/backend.jvm')
includeProject(':compiler:cli')
includeProject(':compiler:cli-common', 'compiler/cli/cli-common')
includeProject(':compiler:cli-js', 'compiler/cli/cli-js')
includeProject(':compiler:container')
includeProject(':compiler:fir:cones')
includeProject(':compiler:fir:dump')
includeProject(':compiler:fir:fir2ir')
includeProject(':compiler:fir:java')
includeProject(':compiler:fir:modularized-tests')
includeProject(':compiler:fir:psi2fir')
includeProject(':compiler:fir:resolve')
includeProject(':compiler:fir:tree')
includeProject(':compiler:fir:tree:visitors-generator')
includeProject(':compiler:frontend')
includeProject(':compiler:frontend.common')
includeProject(':compiler:frontend.java')
includeProject(':compiler:incremental-compilation-impl')
includeProject(':compiler:ir.backend.common', 'compiler/ir/backend.common')
includeProject(':compiler:ir.ir2cfg', 'compiler/ir/ir.ir2cfg')
includeProject(':compiler:ir.psi2ir', 'compiler/ir/ir.psi2ir')
includeProject(':compiler:ir.serialization.common', 'compiler/ir/serialization.common')
includeProject(':compiler:ir.serialization.js', 'compiler/ir/serialization.js')
includeProject(':compiler:ir.tree', 'compiler/ir/ir.tree')
includeProject(':compiler:light-classes')
includeProject(':compiler:plugin-api')
includeProject(':compiler:psi')
includeProject(':compiler:resolution')
includeProject(':compiler:serialization')
includeProject(':compiler:tests-common')
includeProject(':compiler:tests-common-jvm6')
includeProject(':compiler:tests-different-jdk')
includeProject(':compiler:tests-java8')
includeProject(':compiler:tests-spec')
includeProject(':compiler:util')
includeProject(':core:builtins')
includeProject(':core:descriptors')
includeProject(':core:descriptors.jvm')
includeProject(':core:descriptors.runtime')
includeProject(':core:deserialization')
includeProject(':core:metadata')
includeProject(':core:metadata.jvm')
includeProject(':core:type-system')
includeProject(':core:util.runtime')
includeProject(':daemon-common', 'compiler/daemon/daemon-common')
includeProject(':daemon-common-new', 'compiler/daemon/daemon-common-new')
includeProject(':dependencies:android-sdk')
includeProject(':examples:annotation-processor-example', 'libraries/examples/annotation-processor-example')
includeProject(':examples:kotlin-jsr223-daemon-local-eval-example', 'libraries/examples/kotlin-jsr223-daemon-local-eval-example')
includeProject(':examples:kotlin-jsr223-local-example', 'libraries/examples/kotlin-jsr223-local-example')
includeProject(':examples:scripting-jvm-embeddable-host', 'libraries/examples/scripting/jvm-embeddable-host')
includeProject(':examples:scripting-jvm-maven-deps', 'libraries/examples/scripting/jvm-maven-deps/script')
includeProject(':examples:scripting-jvm-maven-deps-host', 'libraries/examples/scripting/jvm-maven-deps/host')
includeProject(':examples:scripting-jvm-simple-script', 'libraries/examples/scripting/jvm-simple-script/script')
includeProject(':examples:scripting-jvm-simple-script-host', 'libraries/examples/scripting/jvm-simple-script/host')
includeProject(':generators')
includeProject(':generators:test-generator')
includeProject(':idea')
includeProject(':idea-runner')
includeProject(':idea:fir-view')
includeProject(':idea:formatter')
includeProject(':idea:ide-common')
includeProject(':idea:idea-android')
includeProject(':idea:idea-android-output-parser', 'idea/idea-android/idea-android-output-parser')
includeProject(':idea:idea-core')
includeProject(':idea:idea-git')
includeProject(':idea:idea-gradle')
includeProject(':idea:idea-gradle-native')
includeProject(':idea:idea-j2k')
includeProject(':idea:idea-jps-common')
includeProject(':idea:idea-jvm')
includeProject(':idea:idea-maven')
includeProject(':idea:idea-native')
includeProject(':idea:idea-test-framework')
includeProject(':idea:jvm-debugger:eval4j')
includeProject(':idea:jvm-debugger:jvm-debugger-core')
includeProject(':idea:jvm-debugger:jvm-debugger-evaluation')
includeProject(':idea:jvm-debugger:jvm-debugger-sequence')
includeProject(':idea:jvm-debugger:jvm-debugger-util')
includeProject(':idea:kotlin-gradle-tooling')
includeProject(':include:kotlin-compiler')
includeProject(':include:kotlin-stdlib-common-sources')
includeProject(':j2k')
includeProject(':jps-plugin')
includeProject(':js:js.ast')
includeProject(':js:js.dce')
includeProject(':js:js.frontend')
includeProject(':js:js.parser')
includeProject(':js:js.serializer')
includeProject(':js:js.tests')
includeProject(':js:js.translator')
includeProject(':kotlin-allopen', 'libraries/tools/kotlin-allopen')
includeProject(':kotlin-allopen-compiler-plugin', 'plugins/allopen/allopen-cli')
includeProject(':kotlin-allopen:plugin-marker', 'libraries/tools/kotlin-allopen/plugin-marker')
includeProject(':kotlin-android-extensions', 'prepare/android-extensions-compiler-gradle')
includeProject(':kotlin-android-extensions-runtime', 'plugins/android-extensions/android-extensions-runtime')
includeProject(':kotlin-annotation-processing', 'plugins/kapt3/kapt3-compiler')
includeProject(':kotlin-annotation-processing-base', 'plugins/kapt3/kapt3-base')
includeProject(':kotlin-annotation-processing-cli', 'plugins/kapt3/kapt3-cli')
includeProject(':kotlin-annotation-processing-embeddable', 'prepare/kotlin-annotation-processing-embeddable')
includeProject(':kotlin-annotation-processing-gradle', 'libraries/tools/kotlin-annotation-processing')
includeProject(':kotlin-annotation-processing-runtime', 'plugins/kapt3/kapt3-runtime')
includeProject(':kotlin-annotations-android', 'libraries/tools/kotlin-annotations-android')
includeProject(':kotlin-annotations-jvm', 'libraries/tools/kotlin-annotations-jvm')
includeProject(':kotlin-ant', 'ant')
includeProject(':kotlin-build-common', 'build-common')
includeProject(':kotlin-compiler', 'prepare/compiler')
includeProject(':kotlin-compiler-client-embeddable', 'prepare/compiler-client-embeddable')
includeProject(':kotlin-compiler-embeddable', 'prepare/compiler-embeddable')
includeProject(':kotlin-compiler-runner', 'compiler/compiler-runner')
includeProject(':kotlin-daemon', 'compiler/daemon')
includeProject(':kotlin-daemon-client', 'compiler/daemon/daemon-client')
includeProject(':kotlin-daemon-client-new', 'compiler/daemon/daemon-client-new')
includeProject(':kotlin-daemon-embeddable', 'prepare/kotlin-daemon-embeddable')
includeProject(':kotlin-gradle-plugin', 'libraries/tools/kotlin-gradle-plugin')
includeProject(':kotlin-gradle-plugin-api', 'libraries/tools/kotlin-gradle-plugin-api')
includeProject(':kotlin-gradle-plugin-dsl-codegen', 'libraries/tools/kotlin-gradle-plugin-dsl-codegen')
includeProject(':kotlin-gradle-plugin-integration-tests', 'libraries/tools/kotlin-gradle-plugin-integration-tests')
includeProject(':kotlin-gradle-plugin-model', 'libraries/tools/kotlin-gradle-plugin-model')
includeProject(':kotlin-gradle-plugin-test-utils-embeddable', 'libraries/tools/kotlin-gradle-plugin-test-utils-embeddable')
includeProject(':kotlin-gradle-plugin:plugin-marker', 'libraries/tools/kotlin-gradle-plugin/plugin-marker')
includeProject(':kotlin-gradle-subplugin-example', 'libraries/examples/kotlin-gradle-subplugin-example')
includeProject(':kotlin-imports-dumper-compiler-plugin', 'plugins/imports-dumper')
includeProject(':kotlin-jps-plugin', 'prepare/jps-plugin')
includeProject(':kotlin-main-kts', 'libraries/tools/kotlin-main-kts')
includeProject(':kotlin-main-kts-test', 'libraries/tools/kotlin-main-kts-test')
includeProject(':kotlin-native:kotlin-native-library-reader', 'konan/library-reader')
includeProject(':kotlin-native:kotlin-native-utils', 'konan/utils')
includeProject(':kotlin-noarg', 'libraries/tools/kotlin-noarg')
includeProject(':kotlin-noarg-compiler-plugin', 'plugins/noarg/noarg-cli')
includeProject(':kotlin-noarg:plugin-marker', 'libraries/tools/kotlin-noarg/plugin-marker')
includeProject(':kotlin-preloader', 'compiler/preloader')
includeProject(':kotlin-reflect', 'libraries/reflect')
includeProject(':kotlin-reflect-api', 'libraries/reflect/api')
includeProject(':kotlin-runner', 'compiler/cli/cli-runner')
includeProject(':kotlin-sam-with-receiver', 'libraries/tools/kotlin-sam-with-receiver')
includeProject(':kotlin-sam-with-receiver-compiler-plugin', 'plugins/sam-with-receiver/sam-with-receiver-cli')
includeProject(':kotlin-script-runtime', 'libraries/tools/script-runtime')
includeProject(':kotlin-script-util', 'libraries/tools/kotlin-script-util')
includeProject(':kotlin-scripting-common', 'libraries/scripting/common')
includeProject(':kotlin-scripting-compiler', 'plugins/scripting/scripting-compiler')
includeProject(':kotlin-scripting-compiler-embeddable', 'plugins/scripting/scripting-compiler-embeddable')
includeProject(':kotlin-scripting-compiler-impl', 'plugins/scripting/scripting-compiler-impl')
includeProject(':kotlin-scripting-compiler-impl-embeddable', 'plugins/scripting/scripting-compiler-impl-embeddable')
includeProject(':kotlin-scripting-idea', 'plugins/scripting/scripting-idea')
includeProject(':kotlin-scripting-intellij', 'libraries/scripting/intellij')
includeProject(':kotlin-scripting-jsr223', 'libraries/scripting/jsr223')
includeProject(':kotlin-scripting-jsr223-embeddable', 'libraries/scripting/jsr223-embeddable')
includeProject(':kotlin-scripting-jsr223-test', 'libraries/scripting/jsr223-test')
includeProject(':kotlin-scripting-jvm', 'libraries/scripting/jvm')
includeProject(':kotlin-scripting-jvm-host', 'libraries/scripting/jvm-host')
includeProject(':kotlin-scripting-jvm-host-embeddable', 'libraries/scripting/jvm-host-embeddable')
includeProject(':kotlin-scripting-jvm-host-test', 'libraries/scripting/jvm-host-test')
includeProject(':kotlin-serialization', 'libraries/tools/kotlin-serialization')
includeProject(':kotlin-serialization-unshaded', 'libraries/tools/kotlin-serialization-unshaded')
includeProject(':kotlin-serialization:plugin-marker', 'libraries/tools/kotlin-serialization/plugin-marker')
includeProject(':kotlin-source-sections-compiler-plugin', 'plugins/source-sections/source-sections-compiler')
includeProject(':kotlin-test', 'libraries/kotlin.test')
includeProject(':kotlin-test-nodejs-runner', 'libraries/tools/kotlin-test-nodejs-runner')
includeProject(':kotlin-test:kotlin-test-annotations-common', 'libraries/kotlin.test/annotations-common')
includeProject(':kotlin-test:kotlin-test-common', 'libraries/kotlin.test/common')
includeProject(':kotlin-test:kotlin-test-js', 'libraries/kotlin.test/js')
includeProject(':kotlin-test:kotlin-test-js:kotlin-test-js-it')
includeProject(':kotlin-test:kotlin-test-js:kotlin-test-js-it', 'libraries/kotlin.test/js/it')
includeProject(':kotlin-test:kotlin-test-junit', 'libraries/kotlin.test/junit')
includeProject(':kotlin-test:kotlin-test-junit5', 'libraries/kotlin.test/junit5')
includeProject(':kotlin-test:kotlin-test-jvm', 'libraries/kotlin.test/jvm')
includeProject(':kotlin-test:kotlin-test-testng', 'libraries/kotlin.test/testng')
includeProject(':kotlin-util-io', 'compiler/util-io')
includeProject(':kotlin-util-klib', 'compiler/util-klib')
includeProject(':kotlinx-metadata', 'libraries/kotlinx-metadata')
includeProject(':kotlinx-metadata-jvm', 'libraries/kotlinx-metadata/jvm')
includeProject(':kotlinx-serialization-compiler-plugin', 'plugins/kotlin-serialization/kotlin-serialization-compiler')
includeProject(':kotlinx-serialization-ide-plugin', 'plugins/kotlin-serialization/kotlin-serialization-ide')
includeProject(':libraries:kotlin-prepush-hook', 'libraries/tools/kotlin-prepush-hook')
includeProject(':libraries:tools:mutability-annotations-compat')
includeProject(':nj2k')
includeProject(':nj2k:nj2k-services')
includeProject(':noarg-ide-plugin', 'plugins/noarg/noarg-ide')
includeProject(':pill:generate-all-tests', 'plugins/pill/generate-all-tests')
includeProject(':plugins:android-extensions-compiler', 'plugins/android-extensions/android-extensions-compiler')
includeProject(':plugins:android-extensions-ide', 'plugins/android-extensions/android-extensions-idea')
includeProject(':plugins:annotation-based-compiler-plugins-ide-support')
includeProject(':plugins:jvm-abi-gen')
includeProject(':plugins:kapt3-idea', 'plugins/kapt3/kapt3-idea')
includeProject(':plugins:lint')
includeProject(':plugins:uast-kotlin')
includeProject(':plugins:uast-kotlin-idea')
includeProject(':prepare:build.version')
includeProject(':prepare:formatter')
includeProject(':prepare:ide-lazy-resolver')
includeProject(':prepare:idea-plugin')
includeProject(':sam-with-receiver-ide-plugin', 'plugins/sam-with-receiver/sam-with-receiver-ide')
includeProject(':test-instrumenter')
includeProject(':tools:kotlinp', 'libraries/tools/kotlinp')

// Uncomment to use locally built protobuf-relocated
// includeBuild("dependencies/protobuf")
